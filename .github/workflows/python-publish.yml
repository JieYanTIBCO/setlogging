name: Python CI/CD Workflow # The name of the workflow

on:
  # Uncomment the following lines to enable automatic triggers:
  # push: # Trigger on pushes to specified branches
  #   branches:
  #     - main # Only trigger for the main branch
  # pull_request: # Trigger on pull requests targeting the main branch
  #   branches:
  #     - main

  # Always allow manual triggering
  workflow_dispatch:

jobs:
  test-and-publish: # Define the main job
    runs-on: ubuntu-latest # Use the latest Ubuntu runner environment

    steps:
      - name: Checkout code # Step to pull the latest repository code
        uses: actions/checkout@v3

      - name: Set up Python # Step to configure the Python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.9" # Specify the Python version for this job

      - name: Upgrade Hatchling # Ensure Hatchling is up-to-date
        run: pip install --upgrade hatchling

      - name: Install Python dependencies # Install Python project dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install the setlogging package # Install your module
        run: pip install -e .

      - name: Run pytest # Run automated tests using pytest and exclude manual_test.py
        run: pytest -v --cov=src/setlogging tests/ --ignore=tests/manual_test.py

      - name: Set up Node.js for Semantic-Release # Configure Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: "16" # Use a compatible Node.js version

      - name: Install Semantic-Release dependencies # Install Semantic-Release and plugins
        run: npm install

      - name: Semantic-Release Dry Run # Determine the version without creating a release
        run: npx semantic-release --dry-run
      
      - name: Run Semantic-Release # Determine version and create GitHub release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub token for creating releases
        run: npx semantic-release

      - name: Build Python package # Build the Python package for distribution
        run: |
          python setup.py sdist bdist_wheel
          ls dist/  # Check the package files

      - name: Publish to PyPI # Publish to PyPI if on the main branch
        if: github.ref == 'refs/heads/main' # Ensure this runs only on main branch
        env:
          TWINE_USERNAME: "__token__" # Use the literal string "__token__" for API authentication
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }} # Securely pass the PyPI API token from GitHub Secrets
        run: |
          python -m pip install --upgrade twine
          twine upload dist/*
